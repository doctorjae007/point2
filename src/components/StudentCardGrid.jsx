import React from 'react';
// р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕З import canvas-confetti р╣Бр╕ер╣Йр╕з

import { useEffect, useState, useRef } from "react";

// р╣Гр╕Кр╣Й Unicode р╣Бр╕Чр╕Щ lucide-react
const XIcon = () => <span>тЭМ</span>;
const UserPlusIcon = () => <span>ЁЯСдтЮХ</span>;
const RotateCcwIcon = () => <span>ЁЯФД</span>;

const AVATARS = [
  "ЁЯРп", "ЁЯжБ", "ЁЯжД", "ЁЯР╝", "ЁЯР╕", "ЁЯР╡", "ЁЯРи", "ЁЯР░", "ЁЯР▒",
  "ЁЯРо", "ЁЯРФ", "ЁЯРз", "ЁЯРж", "ЁЯРд", "ЁЯжЙ", "ЁЯжЕ", "ЁЯРв", "ЁЯРН",
  "ЁЯРЩ", "ЁЯжХ", "ЁЯжЦ", "ЁЯР│", "ЁЯРм", "ЁЯРа", "ЁЯжЛ", "ЁЯРЭ", "ЁЯРЮ",
  "ЁЯР▓", "ЁЯРЙ", "ЁЯжК", "ЁЯжЭ", "ЁЯжУ", "ЁЯжТ", "ЁЯжШ", "ЁЯжФ", "ЁЯжж", "ЁЯже"
];

const DEFAULT_NAMES = [
  "р╕Ир╕┤р╕гр╕Юр╕▒р╕Тр╕Щр╣М","р╕Кр╕вр╕Юр╕е","р╕Кр╕зр╕Щр╕▓р╕Бр╕г","р╕Ур╕▒р╕Рр╕Кр╕Щр╕Щ","р╕Ур╕▒р╕Рр╕Щр╕▒р╕Щр╕Чр╣М","р╕Шр╕Щр╣Вр╕Кр╕Хр╕┤","р╕Юр╕▒р╕кр╕Бр╕г","р╕Шр╕гр╕Ур╕┤р╕Щр╕Чр╕гр╣М","р╕Щр╕ар╕▒р╕кр╕Бр╕г","р╕Ыр╕┤р╣Вр╕вр╕гр╕к",
  "р╕Юр╕┤р╕Кр╕┤р╕Х","р╕ар╕▒р╕Чр╕гр╕Шр╕г","р╕ар╕▓р╕зр╕▒р╕Х","р╕зр╕Кр╕┤р╕гр╕зр╕┤р╕Кр╕Нр╣М","р╕ир╕▒р╕Бр╕Фр╕┤р╕Шр╕▒р╕К","р╕ир╕╕р╕ар╕Ур╕▒р╕Р","р╕Бр╕▒р╕Нр╕Нр╣Мр╕зр╕гр╕▓","р╕Бр╕▒р╕Щр╕Хр╕Юр╕г","р╕Бр╕┤р╕гр╕Ур╕▓","р╕Ир╕┤р╕гр╕Кр╕Нр╕▓р╕Фр╕▓",
  "р╕Ир╕┤р╕гр╕▓р╕Юр╕▒р╕К","р╕Рр╕гр╕┤р╕Хр╕▓","р╕Ыр╕ар╕▓р╕Фр╕▓","р╕Ыр╕ар╕▓р╕зр╕гр╕┤р╕Щр╕Чр╣М","р╕Ыр╕гр╕╡р╕Фр╕▓р╕Щр╕▒р╕Щр╕Чр╣М","р╣Ар╕Ыр╕бр╕┤р╕Бр╕▓","р╕Юр╕┤р╕Кр╕Нр╣Мр╕ер╕ер╕┤р╕Фр╕▓","р╕ар╕▒р╕Чр╕гр╕ар╕г","р╕нр╕ер╕┤р╕кр╕▓","р╕Бр╕Щр╕Бр╕Юр╕Зр╕ир╣М",
  "р╕Бр╕др╕Хр╣Ар╕бр╕Ш","р╕Бр╣Йр╕нр╕Зр╕ар╕Ю","р╣Ар╕Бр╕гр╕┤р╕Бр╕др╕Чр╕Шр╕┤р╣М","р╣Ар╕Хр╕Кр╕┤р╕Щр╕Чр╣М","р╕Шр╕Щр╕Бр╕г","р╕Шр╕Щр╕зр╕гр╕гр╕Шр╕Щр╣М","р╕Ыр╕╕р╕Ур╕вр╕зр╕╡р╕гр╣М","р╕Юр╕▒р╕Кр╕гр╕Бр╕╣р╕е","р╕ар╕▓р╕Щр╕╕р╕зр╕▒р╕Тр╕Щр╣М","р╕зр╕Кр╕┤р╕гр╕зр╕┤р╕Кр╕Нр╣М",
  "р╕зр╕кр╕╕р╕зр╕▒р╕Нр╕Нр╣М","р╕ир╕Хр╕Др╕╕р╕У","р╕нр╕Хр╕┤р╣Ар╕Чр╕Ю","р╕нр╕гр╕Зр╕Ур╣Мр╕Бр╕г","р╕Ир╕┤р╕гр╕▓р╕Юр╕▒р╕Кр╕г","р╣Вр╕Ир╣Вр╕Лр╕Яр╕┤р╕Щ","р╕Ур╕┤р╕Кр╕Щр╕▒р╕Щр╕Чр╕Щр╣М","р╕Шр╕▒р╕Нр╕Юр╕┤р╕Кр╕Кр╕▓","р╕Щр╕▒р╕Щр╕Чр╣Мр╕Щр╕ар╕▒р╕к","р╕Ьр╕Бр╕▓р╕Бр╕гр╕нр╕З",
  "р╣Вр╕вр╕кр╕┤р╕Хр╕▓","р╕гр╕▒р╕Кр╕Щр╕╡р╕зр╕гр╕гр╕У","р╕гр╕╕р╣Ир╕Зр╕Щр╕┤р╕ар╕▓","р╕зр╕Кр╕┤р╕гр╕Нр╕▓р╕Ур╣М","р╕зр╕гр╕▒р╕Чр╕Шр╕┤р╕Хр╕▓","р╕зр╕┤р╕ер╕▓р╕кр╕┤р╕Щр╕╡","р╕кр╕╕р╕Ыр╕гр╕░р╕зр╕╡р╕Ур╣М"
];

function App() {
  const maxScore = 100;
  const dingSound = useRef(null);

  useEffect(() => {
    const handleBeforeUnload = (e) => {
      e.preventDefault();
      e.returnValue = "";
    };
    window.addEventListener("beforeunload", handleBeforeUnload);
    
    // Setup audio
    try {
      dingSound.current = new Audio("/ding.mp3");
      dingSound.current.preload = "auto";
      dingSound.current.onerror = () => {
        console.warn("р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣Мр╣Ар╕кр╕╡р╕вр╕З ding.mp3 р╣Др╕Фр╣Й");
        dingSound.current = null;
      };
    } catch (error) {
      console.warn("р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕гр╣Йр╕▓р╕З Audio element р╣Др╕Фр╣Й:", error);
      dingSound.current = null;
    }

    return () => {
      window.removeEventListener("beforeunload", handleBeforeUnload);
    };
  }, []);

  const createInitialStudents = (names) => {
    return names.map((name, index) => ({
      id: Date.now() + index,
      name,
      avatar: AVATARS[Math.floor(Math.random() * AVATARS.length)],
      score: 0
    }));
  };

  const [students, setStudents] = useState([]);
  const [highlightedId, setHighlightedId] = useState(null);
  const [showAddForm, setShowAddForm] = useState(false);
  const [newStudentName, setNewStudentName] = useState('');

  // р╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕е
  useEffect(() => {
    const saved = localStorage.getItem("studentScores");
    if (saved) {
      try {
        const parsed = JSON.parse(saved);
        if (Array.isArray(parsed) && parsed.length > 0) {
          setStudents(parsed);
        } else {
          setStudents(createInitialStudents(DEFAULT_NAMES));
        }
      } catch (err) {
        console.error("Error parsing saved scores:", err);
        setStudents(createInitialStudents(DEFAULT_NAMES));
      }
    } else {
      setStudents(createInitialStudents(DEFAULT_NAMES));
    }
  }, []);

  // р╣Ар╕Лр╕Яр╕Вр╣Йр╕нр╕бр╕╣р╕е
  useEffect(() => {
    if (students.length > 0) {
      localStorage.setItem("studentScores", JSON.stringify(students));
    }
  }, [students]);

  const playDingSound = () => {
  try {
    // р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕кр╕╡р╕вр╕З beep р╕Фр╣Йр╕зр╕в Web Audio API
    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    const oscillator = audioContext.createOscillator();
    const gainNode = audioContext.createGain();
    
    oscillator.connect(gainNode);
    gainNode.connect(audioContext.destination);
    
    // р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╣Ар╕кр╕╡р╕вр╕З
    oscillator.frequency.setValueAtTime(523, audioContext.currentTime); // р╣Вр╕Щр╣Кр╕Хр╕кр╕╣р╕З
    oscillator.type = 'sine';
    
    // р╕Др╕зр╕▓р╕бр╕Фр╕▒р╕З
    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);
    
    // р╣Ар╕ер╣Ир╕Щр╣Ар╕кр╕╡р╕вр╕З
    oscillator.start(audioContext.currentTime);
    oscillator.stop(audioContext.currentTime + 0.3);
    
    console.log("ЁЯФК р╣Ар╕ер╣Ир╕Щр╣Ар╕кр╕╡р╕вр╕З beep!");
  } catch (error) {
    console.log("р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕ер╣Ир╕Щр╣Ар╕кр╕╡р╕вр╕Зр╣Др╕Фр╣Й:", error);
  }
};

  // ЁЯЪА р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╣Ар╕нр╕Яр╣Ар╕Яр╕Др╕Юр╕ер╕╕р╕зр╕┤р╣Ир╕Зр╕Вр╕╢р╣Йр╕Щр╕Ър╕Щ - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕Др╕гр╕нр╕Ър╕Др╕ер╕╕р╕бр╕Ир╕н
  const fireConfetti = (score) => {
    console.log("ЁЯЪА р╕вр╕┤р╕Зр╕Юр╕ер╕╕р╕Вр╕╢р╣Йр╕Щр╕Ър╕Щ! р╕Др╕░р╣Бр╕Щр╕Щ:", score);
    
    // р╕кр╕гр╣Йр╕▓р╕З confetti elements р╕Фр╣Йр╕зр╕в DOM manipulation
    const createConfettiPiece = (color, x, y, delay = 0) => {
      setTimeout(() => {
        const confettiPiece = document.createElement('div');
        confettiPiece.style.cssText = `
          position: fixed;
          width: 12px;
          height: 12px;
          background-color: ${color};
          left: ${x}px;
          top: ${y}px;
          z-index: 9999;
          pointer-events: none;
          border-radius: 50%;
          box-shadow: 0 0 6px ${color};
          animation: fireworkUp 2s ease-out forwards;
        `;
        
        document.body.appendChild(confettiPiece);
        
        // р╕ер╕Ъ element р╕лр╕ер╕▒р╕З animation р╣Ар╕кр╕гр╣Зр╕И
        setTimeout(() => {
          if (confettiPiece.parentNode) {
            confettiPiece.parentNode.removeChild(confettiPiece);
          }
        }, 3000);
      }, delay);
    };

    // р╣Ар╕Юр╕┤р╣Ир╕б CSS animation р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡
    if (!document.getElementById('confetti-styles')) {
      const style = document.createElement('style');
      style.id = 'confetti-styles';
      style.textContent = `
        @keyframes fireworkUp {
  0% {
    transform: translateY(0px);
    opacity: 1;
  }
  100% {
    transform: translateY(-800px);
    opacity: 0;
  }
}
        @keyframes confetti-explode {
          0% {
            transform: scale(0) rotateZ(0deg);
            opacity: 0;
          }
          50% {
            transform: scale(1.5) rotateZ(180deg);
            opacity: 1;
          }
          100% {
            transform: scale(0) rotateZ(360deg);
            opacity: 0;
          }
        }
      `;
      document.head.appendChild(style);
    }

    // р╕Бр╕│р╕лр╕Щр╕Фр╕Ир╕│р╕Щр╕зр╕Щр╣Бр╕ер╕░р╕кр╕╡р╕Хр╕▓р╕бр╕Др╕░р╣Бр╕Щр╕Щ (р╣Гр╕Кр╣Йр╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╣Ар╕Ыр╣Зр╕Щр╕лр╕ер╕▒р╕Б)
    let colors, particleCount;
    
    if (score === 100) {
      // ЁЯПЖ р╕Юр╕ер╕╕р╕Юр╕┤р╣Ар╕ир╕й - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕Чр╕нр╕З
      colors = ['#FFD700', '#FFA500', '#FFFF00', '#F0E68C', '#DAA520'];
      particleCount = 80;
      console.log("ЁЯПЖ р╕Юр╕ер╕╕р╕Юр╕┤р╣Ар╕ир╕й 100 р╕Др╕░р╣Бр╕Щр╕Щ!");
    } else if (score >= 90) {
      // ЁЯеЗ р╕Юр╕ер╕╕р╣Гр╕лр╕Нр╣И - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕кр╕Ф
      colors = ['#FFD700', '#FFFF00', '#FFA500'];
      particleCount = 60;
      console.log("ЁЯеЗ р╕Юр╕ер╕╕р╣Гр╕лр╕Нр╣И 90+ р╕Др╕░р╣Бр╕Щр╕Щ!");
    } else if (score >= 70) {
      // ЁЯеИ р╕Юр╕ер╕╕р╕Бр╕ер╕▓р╕З - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕нр╣Ир╕нр╕Щ
      colors = ['#FFFF00', '#F0E68C', '#FFD700'];
      particleCount = 45;
      console.log("ЁЯеИ р╕Юр╕ер╕╕р╕Бр╕ер╕▓р╕З 70+ р╕Др╕░р╣Бр╕Щр╕Щ!");
    } else if (score >= 50) {
      // ЁЯеЙ р╕Юр╕ер╕╕р╕Шр╕гр╕гр╕бр╕Фр╕▓ - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕Ыр╕Щр╕кр╣Йр╕б
      colors = ['#FFA500', '#FFD700', '#FFFF00'];
      particleCount = 35;
      console.log("ЁЯеЙ р╕Юр╕ер╕╕р╕Шр╕гр╕гр╕бр╕Фр╕▓ 50+ р╕Др╕░р╣Бр╕Щр╕Щ!");
    } else if (score >= 30) {
      // ЁЯМИ р╕Юр╕ер╕╕р╣Ар╕ер╣Зр╕Б - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕нр╣Ир╕нр╕Щ
      colors = ['#F0E68C', '#FFFF00', '#DAA520'];
      particleCount = 25;
      console.log("ЁЯМИ р╕Юр╕ер╕╕р╣Ар╕ер╣Зр╕Б 30+ р╕Др╕░р╣Бр╕Щр╕Щ!");
    } else if (score >= 10) {
      // тЬи р╕Юр╕ер╕╕р╕бр╕┤р╕Щр╕┤ - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕нр╣Ир╕нр╕Щ
      colors = ['#FFFF00', '#F0E68C', '#FFD700'];
      particleCount = 20;
      console.log("тЬи р╕Юр╕ер╕╕р╕бр╕┤р╕Щр╕┤ 10+ р╕Др╕░р╣Бр╕Щр╕Щ!");
    } else {
      // ЁЯОЙ р╕Юр╕ер╕╕р╣Ар╕ер╣Зр╕Бр╣Ж - р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕нр╣Ир╕нр╕Щр╕бр╕▓р╕Б
      colors = ['#F0E68C', '#FFFACD', '#DAA520'];
      particleCount = 15;
      console.log("ЁЯОЙ р╕Юр╕ер╕╕р╣Ар╕ер╣Зр╕Бр╣Ж 1-9 р╕Др╕░р╣Бр╕Щр╕Щ!");
    }

    // р╕кр╕гр╣Йр╕▓р╕З confetti pieces р╕Др╕гр╕нр╕Ър╕Др╕ер╕╕р╕бр╕Др╕зр╕▓р╕бр╕Бр╕зр╣Йр╕▓р╕Зр╕Вр╕нр╕Зр╕Ир╕н - р╕зр╕┤р╣Ир╕Зр╕Вр╕╢р╣Йр╕Щр╕Ир╕▓р╕Бр╕ер╣Ир╕▓р╕З
    const screenWidth = window.innerWidth;
    const screenHeight = window.innerHeight;

    for (let i = 0; i < particleCount; i++) {
      const color = colors[Math.floor(Math.random() * colors.length)];
      
      // р╕Бр╕гр╕░р╕Ир╕▓р╕вр╣Ар╕Хр╣Зр╕бр╕Др╕зр╕▓р╕бр╕Бр╕зр╣Йр╕▓р╕Зр╕Ир╕н
      const x = Math.random() * screenWidth;
      // р╣Ар╕гр╕┤р╣Ир╕бр╕Ир╕▓р╕Бр╕Фр╣Йр╕▓р╕Щр╕ер╣Ир╕▓р╕Зр╕Ир╕н
      const y = screenHeight + 50 + (Math.random() * 100);
      
      // р╕лр╕Щр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓р╕Бр╕▓р╕гр╕нр╕нр╕Бр╕бр╕▓р╣Бр╕Ър╕Ър╕кр╕╕р╣Ир╕б
      const delay = Math.random() * 500;
      
      createConfettiPiece(color, x, y, delay);
    }

    // р╕Юр╕ер╕╕р╕Юр╕┤р╣Ар╕ир╕йр╕кр╕│р╕лр╕гр╕▒р╕Ъ 100 р╕Др╕░р╣Бр╕Щр╕Щ - р╕лр╕ер╕▓р╕вр╕гр╕нр╕Ъ
    if (score === 100) {
      // р╕гр╕нр╕Ър╕Чр╕╡р╣И 2
      setTimeout(() => {
        for (let i = 0; i < 50; i++) {
          const color = colors[Math.floor(Math.random() * colors.length)];
          const x = Math.random() * screenWidth;
          const y = screenHeight + 100 + (Math.random() * 100);
          createConfettiPiece(color, x, y, Math.random() * 300);
        }
      }, 600);
      
      // р╕гр╕нр╕Ър╕Чр╕╡р╣И 3
      setTimeout(() => {
        for (let i = 0; i < 40; i++) {
          const color = colors[Math.floor(Math.random() * colors.length)];
          const x = Math.random() * screenWidth;
          const y = screenHeight + 150 + (Math.random() * 100);
          createConfettiPiece(color, x, y, Math.random() * 200);
        }
      }, 1200);
    } else if (score >= 90) {
      // р╕Юр╕ер╕╕р╣Ар╕кр╕гр╕┤р╕бр╕кр╕│р╕лр╕гр╕▒р╕Ъ 90+ р╕Др╕░р╣Бр╕Щр╕Щ
      setTimeout(() => {
        for (let i = 0; i < 30; i++) {
          const color = colors[Math.floor(Math.random() * colors.length)];
          const x = Math.random() * screenWidth;
          const y = screenHeight + 75 + (Math.random() * 100);
          createConfettiPiece(color, x, y, Math.random() * 400);
        }
      }, 400);
    }
  };

  const handleScore = (id, delta) => {
    let newScore = 0;
    
    setStudents(prev =>
      prev.map(student => {
        if (student.id === id) {
          newScore = Math.max(0, Math.min(student.score + delta, maxScore));
          return {
            ...student,
            score: newScore,
          };
        }
        return student;
      })
    );

    setHighlightedId(id);
    setTimeout(() => setHighlightedId(null), 2000);
    
    if (delta > 0) {
      playDingSound();
      
      // ЁЯЪА р╕вр╕┤р╕Зр╕Юр╕ер╕╕р╕Вр╕╢р╣Йр╕Щр╕Ър╕Щр╕лр╕ер╕▒р╕Зр╕Ир╕▓р╕Бр╕нр╕▒р╕Юр╣Ар╕Фр╕Хр╕Др╕░р╣Бр╕Щр╕Щр╣Бр╕ер╣Йр╕з
      setTimeout(() => {
        fireConfetti(newScore);
      }, 100);
    }
  };

  const addStudent = () => {
    if (newStudentName.trim()) {
      const newStudent = {
        id: Date.now(),
        name: newStudentName.trim(),
        avatar: AVATARS[Math.floor(Math.random() * AVATARS.length)],
        score: 0
      };
      setStudents(prev => [...prev, newStudent]);
      setNewStudentName('');
      setShowAddForm(false);
    }
  };

  const removeStudent = (id) => {
    if (confirm('р╕Др╕╕р╕Ур╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕ер╕Ър╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щр╕Др╕Щр╕Щр╕╡р╣Йр╣Гр╕Кр╣Ир╣Др╕лр╕б?')) {
      setStudents(prev => prev.filter(student => student.id !== id));
    }
  };

  const resetScores = () => {
    if (confirm('р╕Др╕╕р╕Ур╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕гр╕╡р╣Ар╕Лр╕Хр╕Др╕░р╣Бр╕Щр╕Щр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╣Гр╕Кр╣Ир╣Др╕лр╕б?')) {
      setStudents(prev => prev.map(student => ({ ...student, score: 0 })));
    }
  };

  const resetToDefault = () => {
    if (confirm('р╕Др╕╕р╕Ур╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕гр╕╡р╣Ар╕Лр╕Хр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╣Ар╕Ыр╣Зр╕Щр╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Гр╕Кр╣Ир╣Др╕лр╕б?')) {
      setStudents(createInitialStudents(DEFAULT_NAMES));
    }
  };

  const sortedStudents = [...students].sort((a, b) => b.score - a.score);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-green-50 p-4">
      <div className="max-w-7xl mx-auto">
        <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
          <div className="flex flex-wrap justify-between items-center mb-4 gap-2">
            <h2 className="text-2xl font-bold text-gray-800">
              ЁЯПЖ Leaderboard р╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ ({students.length} р╕Др╕Щ)
            </h2>
            
            <div className="flex flex-wrap gap-2">
              <button
                onClick={() => setShowAddForm(true)}
                className="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 flex items-center gap-2 shadow-md"
              >
                <UserPlusIcon />
                р╣Ар╕Юр╕┤р╣Ир╕бр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ
              </button>

              {/* р╕Ыр╕╕р╣Ир╕бр╕Чр╕Фр╕кр╕нр╕Ър╕Юр╕ер╕╕ */}
              <button
                onClick={() => {
                  console.log("р╕Чр╕Фр╕кр╕нр╕Ър╕Юр╕ер╕╕р╕Вр╕╢р╣Йр╕Щр╕Ър╕Щ!");
                  fireConfetti(75); // р╕Чр╕Фр╕кр╕нр╕Ър╕Фр╣Йр╕зр╕вр╕Др╕░р╣Бр╕Щр╕Щ 75
                }}
                className="bg-pink-500 text-white px-4 py-2 rounded-lg hover:bg-pink-600 shadow-md"
              >
                ЁЯЪА р╕Чр╕Фр╕кр╕нр╕Ър╕Юр╕ер╕╕
              </button>
              
              <button
                onClick={resetScores}
                className="bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-yellow-600 shadow-md"
              >
                р╕гр╕╡р╣Ар╕Лр╕Хр╕Др╕░р╣Бр╕Щр╕Щ
              </button>
              
              <button
                onClick={resetToDefault}
                className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 flex items-center gap-2 shadow-md"
              >
                <RotateCcwIcon />
                р╕гр╕╡р╣Ар╕Лр╕Хр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
              </button>
            </div>
          </div>

          {/* Add Student Modal */}
          {showAddForm && (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
              <div className="bg-white p-6 rounded-lg shadow-lg max-w-md w-full mx-4">
                <h3 className="text-lg font-bold mb-4">р╣Ар╕Юр╕┤р╣Ир╕бр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щр╣Гр╕лр╕бр╣И</h3>
                
                <input
                  type="text"
                  value={newStudentName}
                  onChange={(e) => setNewStudentName(e.target.value)}
                  placeholder="р╕Кр╕╖р╣Ир╕нр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ"
                  className="w-full px-3 py-2 border border-gray-300 rounded mb-4 focus:outline-none focus:border-blue-500"
                  onKeyPress={(e) => e.key === 'Enter' && addStudent()}
                  autoFocus
                />
                
                <div className="flex gap-2 justify-end">
                  <button
                    onClick={() => {
                      setShowAddForm(false);
                      setNewStudentName('');
                    }}
                    className="px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400"
                  >
                    р╕вр╕Бр╣Ар╕ер╕┤р╕Б
                  </button>
                  <button
                    onClick={addStudent}
                    className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                    disabled={!newStudentName.trim()}
                  >
                    р╣Ар╕Юр╕┤р╣Ир╕б
                  </button>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Student Grid */}
        {sortedStudents.length > 0 ? (
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4">
            {sortedStudents.map((student, index) => (
              <div
                key={student.id}
                className={`bg-white rounded-lg p-3 flex flex-col items-center relative transition-all duration-300 border-2
                  ${
                    highlightedId === student.id
                      ? "scale-110 shadow-2xl z-10 ring-4 ring-yellow-400 border-yellow-300"
                      : "shadow-md hover:shadow-lg border-gray-200"
                  } hover:scale-105`}
              >
                {/* р╕нр╕▒р╕Щр╕Фр╕▒р╕Ъ */}
                <div className={`absolute -top-2 -left-2 w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${
                  index === 0 ? 'bg-yellow-500 text-white' : 
                  index === 1 ? 'bg-gray-400 text-white' : 
                  index === 2 ? 'bg-orange-600 text-white' : 'bg-blue-500 text-white'
                }`}>
                  {index + 1}
                </div>

                {/* р╕Ыр╕╕р╣Ир╕бр╕ер╕Ъ */}
                <button
                  onClick={() => removeStudent(student.id)}
                  className="absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs hover:bg-red-600"
                  title="р╕ер╕Ър╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ"
                >
                  <XIcon />
                </button>

                {/* р╕Др╕░р╣Бр╕Щр╕Щ */}
                <div className={`text-4xl font-bold mb-2 ${
                  student.score === 100 ? 'text-yellow-500' : // р╕кр╕╡р╕Чр╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ъ 100
                  student.score >= 90 ? 'text-green-600' : 
                  student.score >= 70 ? 'text-blue-600' : 
                  student.score >= 50 ? 'text-yellow-600' : 'text-red-600'
                }`}>
                  {student.score}
                  {student.score === 100 && <span className="text-2xl"> ЁЯПЖ</span>}
                </div>

                {/* Progress bar */}
                <div className="w-full bg-gray-200 rounded-full h-2 mb-3">
                  <div 
                    className={`h-2 rounded-full transition-all duration-300 ${
                      student.score === 100 ? 'bg-gradient-to-r from-yellow-400 to-yellow-600' :
                      student.score >= 90 ? 'bg-gradient-to-r from-green-400 to-green-600' :
                      student.score >= 70 ? 'bg-gradient-to-r from-blue-400 to-blue-600' :
                      student.score >= 50 ? 'bg-gradient-to-r from-yellow-300 to-yellow-500' :
                      'bg-gradient-to-r from-red-300 to-red-500'
                    }`}
                    style={{ width: `${student.score}%` }}
                  ></div>
                </div>

                {/* Avatar */}
                <div className="text-4xl mb-2">{student.avatar}</div>

                {/* р╕Кр╕╖р╣Ир╕н */}
                <div className="text-lg font-semibold mb-3 text-center break-words">
                  {student.name}
                </div>

                {/* р╕Ыр╕╕р╣Ир╕б + / - */}
                <div className="flex gap-2 mt-2">
                  <button
                    onClick={() => handleScore(student.id, -1)}
                    className="bg-red-500 text-white px-3 py-1 rounded text-sm hover:bg-red-600 active:scale-95 transition-all"
                    disabled={student.score <= 0}
                  >
                    -1
                  </button>
                  <button
                    onClick={() => handleScore(student.id, 1)}
                    className="bg-green-500 text-white px-3 py-1 rounded text-sm hover:bg-green-600 active:scale-95 transition-all"
                    disabled={student.score >= 100}
                  >
                    +1
                  </button>
                </div>

                {/* р╕Ыр╕╕р╣Ир╕бр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕гр╣Зр╕з */}
                <div className="flex gap-1 mt-2 opacity-75">
                  <button
                    onClick={() => handleScore(student.id, 5)}
                    className="bg-blue-400 text-white px-2 py-1 rounded text-xs hover:bg-blue-500 active:scale-95 transition-all"
                    disabled={student.score >= 100}
                  >
                    +5
                  </button>
                  <button
                    onClick={() => handleScore(student.id, 10)}
                    className="bg-purple-400 text-white px-2 py-1 rounded text-xs hover:bg-purple-500 active:scale-95 transition-all"
                    disabled={student.score >= 100}
                  >
                    +10
                  </button>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="bg-white rounded-lg shadow-lg p-12 text-center">
            <div className="text-6xl mb-4">ЁЯСе</div>
            <h3 className="text-xl font-semibold text-gray-700 mb-2">
              р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щр╣Гр╕Щр╕гр╕░р╕Ър╕Ъ
            </h3>
            <p className="text-gray-500 mb-6">
              р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Вр╕Фр╕вр╕Бр╕▓р╕гр╣Ар╕Юр╕┤р╣Ир╕бр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щр╕Др╕Щр╣Бр╕гр╕Бр╕Вр╕нр╕Зр╕Др╕╕р╕У
            </p>
            <button
              onClick={() => setShowAddForm(true)}
              className="bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 flex items-center gap-2 mx-auto"
            >
              <UserPlusIcon />
              р╣Ар╕Юр╕┤р╣Ир╕бр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щр╕Др╕Щр╣Бр╕гр╕Б
            </button>
          </div>
        )}

        {/* р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ */}
        <div className="mt-8 text-center text-gray-600">
          <p className="mb-2">ЁЯЪА р╣Ар╕нр╕Яр╣Ар╕Яр╕Др╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕зр╕┤р╣Ир╕Зр╕Вр╕╢р╣Йр╕Щр╕Ър╕Щ:</p>
          <div className="flex flex-wrap justify-center gap-2 text-sm">
            <span>ЁЯПЖ 100 р╕Др╕░р╣Бр╕Щр╕Щ = р╕Юр╕ер╕╕р╕кр╕╡р╕Чр╕нр╕Зр╕вр╕┤р╣Ир╕Зр╣Гр╕лр╕Нр╣И 3 р╕гр╕нр╕Ъ</span>
            <span>ЁЯеЗ 90+ = р╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╣Гр╕лр╕Нр╣И 2 р╕гр╕нр╕Ъ</span>
            <span>ЁЯеИ 70+ = р╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕Бр╕ер╕▓р╕З</span>
            <span>ЁЯеЙ 50+ = р╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕Ыр╕Щр╕кр╣Йр╕б</span>
            <span>ЁЯМИ 30+ = р╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕нр╣Ир╕нр╕Щ</span>
            <span>тЬи 10+ = р╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╕бр╕┤р╕Щр╕┤</span>
            <span>ЁЯОЙ 1+ = р╕Юр╕ер╕╕р╕кр╕╡р╣Ар╕лр╕ер╕╖р╕нр╕Зр╣Ар╕ер╣Зр╕Бр╣Ж</span>
          </div>
          <p className="mt-2 text-xs text-gray-500">ЁЯМЯ р╕Юр╕ер╕╕р╕Ир╕░р╕зр╕┤р╣Ир╕Зр╕Вр╕╢р╣Йр╕Щр╕Ир╕▓р╕Бр╕Фр╣Йр╕▓р╕Щр╕ер╣Ир╕▓р╕Зр╕Др╕гр╕нр╕Ър╕Др╕ер╕╕р╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕н</p>
        </div>
      </div>
    </div>
  );
}

export default App;